package softhing.model;
// Generated 13/11/2016 09:04:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * ObjectLossed generated by hbm2java
 */
@Entity
@Table(name="object_lossed"
    ,catalog="seeker"
)
public class ObjectLossed  implements java.io.Serializable {


     private Long olId;
     private User user;
     private String name;
     private String class_;
     private String subclass;
     private Date createdAt;
     private Date updatedAt;
     private Date deletedAt;
     private Set<Tag> tags = new HashSet<Tag>(0);
     private Set<Publish> publishes = new HashSet<Publish>(0);

    public ObjectLossed() {
    }

	
    public ObjectLossed(String name, String class_, String subclass, Date createdAt, Date updatedAt) {
        this.name = name;
        this.class_ = class_;
        this.subclass = subclass;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
    public ObjectLossed(User user, String name, String class_, String subclass, Date createdAt, Date updatedAt, Date deletedAt, Set<Tag> tags, Set<Publish> publishes) {
       this.user = user;
       this.name = name;
       this.class_ = class_;
       this.subclass = subclass;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.deletedAt = deletedAt;
       this.tags = tags;
       this.publishes = publishes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="OL_Id", unique=true, nullable=false)
    public Long getOlId() {
        return this.olId;
    }
    
    public void setOlId(Long olId) {
        this.olId = olId;
    }

    @GenericGenerator(name = "generator", strategy = "foreign",
	parameters = @Parameter(name = "property", value = "Us_Id"))
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Us_Id")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="class", nullable=false)
    public String getClass_() {
        return this.class_;
    }
    
    public void setClass_(String class_) {
        this.class_ = class_;
    }

    
    @Column(name="subclass", nullable=false)
    public String getSubclass() {
        return this.subclass;
    }
    
    public void setSubclass(String subclass) {
        this.subclass = subclass;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false, length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", nullable=false, length=19)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="deleted_at", length=19)
    public Date getDeletedAt() {
        return this.deletedAt;
    }
    
    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="objectLossed")
    public Set<Tag> getTags() {
        return this.tags;
    }
    
    public void setTags(Set<Tag> tags) {
        this.tags = tags;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="objectLossed")
    public Set<Publish> getPublishes() {
        return this.publishes;
    }
    
    public void setPublishes(Set<Publish> publishes) {
        this.publishes = publishes;
    }




}


