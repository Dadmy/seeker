package softhing.model;
// Generated 13/11/2016 09:04:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Twitter generated by hbm2java
 */
@Entity
@Table(name="twitter"
    ,catalog="seeker"
    , uniqueConstraints = @UniqueConstraint(columnNames="username") 
)
public class Twitter  implements java.io.Serializable {


     private Long twId;
     private User user;
     private String username;
     private Date createdAt;
     private Date updatedAt;
     private Date deletedAt;

    public Twitter() {
    }

	
    public Twitter(String username, Date createdAt, Date updatedAt) {
        this.username = username;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
    public Twitter(User user, String username, Date createdAt, Date updatedAt, Date deletedAt) {
       this.user = user;
       this.username = username;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.deletedAt = deletedAt;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Tw_Id", unique=true, nullable=false)
    public Long getTwId() {
        return this.twId;
    }
    
    public void setTwId(Long twId) {
        this.twId = twId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Us_Id")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="username", unique=true, nullable=false)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false, length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", nullable=false, length=19)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="deleted_at", length=19)
    public Date getDeletedAt() {
        return this.deletedAt;
    }
    
    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }




}


