package softhing.model;
// Generated 13/11/2016 09:04:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Form generated by hbm2java
 */
@Entity
@Table(name="form"
    ,catalog="seeker"
)
public class Form  implements java.io.Serializable {


     private Long frmId;
     private Publish publish;
     private String question;
     private Date createdAt;
     private Date updatedAt;
     private Date deletedAt;
     private Set<Answer> answers = new HashSet<Answer>(0);

    public Form() {
    }

	
    public Form(String question, Date createdAt, Date updatedAt) {
        this.question = question;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
    public Form(Publish publish, String question, Date createdAt, Date updatedAt, Date deletedAt, Set<Answer> answers) {
       this.publish = publish;
       this.question = question;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.deletedAt = deletedAt;
       this.answers = answers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Frm_Id", unique=true, nullable=false)
    public Long getFrmId() {
        return this.frmId;
    }
    
    public void setFrmId(Long frmId) {
        this.frmId = frmId;
    }

    @GenericGenerator(name = "generator", strategy = "foreign",
	parameters = @Parameter(name = "property", value = "Pub_Id"))
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Pub_Id")
    public Publish getPublish() {
        return this.publish;
    }
    
    public void setPublish(Publish publish) {
        this.publish = publish;
    }

    
    @Column(name="question", nullable=false)
    public String getQuestion() {
        return this.question;
    }
    
    public void setQuestion(String question) {
        this.question = question;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false, length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", nullable=false, length=19)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="deleted_at", length=19)
    public Date getDeletedAt() {
        return this.deletedAt;
    }
    
    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="form")
    public Set<Answer> getAnswers() {
        return this.answers;
    }
    
    public void setAnswers(Set<Answer> answers) {
        this.answers = answers;
    }




}


